@model ctf_sandbox.Areas.CTF.Models.Competition

@{
    ViewData["Title"] = "Edit Competition";
}

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <div class="row">
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-body">
                            <h3 class="card-title text-success font-monospace">[Competition Details]</h3>
                            <form asp-action="Edit" id="editCompetitionForm">
                                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                <input type="hidden" asp-for="Id" />
                                <input type="hidden" asp-for="CreatorId" />
                                <input type="hidden" asp-for="CreatedAt" />
                                
                                <div class="mb-3">
                                    <label asp-for="Name" class="form-label"></label>
                                    <input asp-for="Name" class="form-control" />
                                    <span asp-validation-for="Name" class="text-danger"></span>
                                </div>
                                
                                <div class="mb-3">
                                    <label asp-for="Description" class="form-label"></label>
                                    <textarea asp-for="Description" class="form-control" rows="3"></textarea>
                                    <span asp-validation-for="Description" class="text-danger"></span>
                                </div>
                                
                                <div class="mb-3">
                                    <label asp-for="StartDate" class="form-label">Start Date (Your Local Time)</label>
                                    <input asp-for="StartDate" class="form-control" type="datetime-local" />
                                    <span asp-validation-for="StartDate" class="text-danger"></span>
                                </div>
                                
                                <div class="mb-3">
                                    <label asp-for="EndDate" class="form-label">End Date (Your Local Time)</label>
                                    <input asp-for="EndDate" class="form-control" type="datetime-local" />
                                    <span asp-validation-for="EndDate" class="text-danger"></span>
                                </div>
                                
                                <div class="mb-3">
                                    <button type="submit" class="btn btn-primary">Save Changes</button>
                                    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="card mb-4">
                        <div class="card-body">
                            <h3 class="card-title text-success font-monospace">[Teams]</h3>
                            <div class="mb-3">
                                @if (ViewBag.AvailableTeams != null && Model.Teams != null)
                                {
                                    var availableTeams = ViewBag.AvailableTeams as List<Team>;
                                    var existingTeamIds = Model.Teams.Select(t => t.TeamId).ToList();
                                    var teamsToAdd = availableTeams.Where(t => !existingTeamIds.Contains(t.Id)).ToList();

                                    if (teamsToAdd.Any())
                                    {
                                        <form asp-action="AddTeam" asp-controller="Competitions" method="post">
                                            <input type="hidden" name="competitionId" value="@Model.Id" />
                                            <div class="input-group">
                                                <select name="teamId" class="form-select" required>
                                                    <option value="">Select a team...</option>
                                                    @foreach (var team in teamsToAdd)
                                                    {
                                                        <option value="@team.Id">@team.Name</option>
                                                    }
                                                </select>
                                                <button type="submit" class="btn btn-outline-primary">Add Team</button>
                                            </div>
                                        </form>
                                    }
                                    else
                                    {
                                        <div class="alert alert-info">
                                            All available teams have been added to this competition.
                                        </div>
                                    }
                                }
                            </div>

                            <div class="table-responsive">
                                <table class="table">
                                    <thead>
                                        <tr>
                                            <th>Team Name</th>
                                            <th>Score</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (Model.Teams != null)
                                        {
                                            @foreach (var team in Model.Teams.Where(t => t.Team != null))
                                            {
                                                <tr>
                                                    <td>@team.Team.Name</td>
                                                    <td>@team.Score</td>
                                                    <td>
                                                        <form asp-action="RemoveTeam" asp-controller="Competitions" method="post" style="display: inline;">
                                                            <input type="hidden" name="competitionId" value="@Model.Id" />
                                                            <input type="hidden" name="teamId" value="@team.TeamId" />
                                                            <button type="submit" class="btn btn-sm btn-danger">Remove</button>
                                                        </form>
                                                    </td>
                                                </tr>
                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>

                    <div class="card">
                        <div class="card-body">
                            <h3 class="card-title text-success font-monospace">[Challenges]</h3>
                            <div class="mb-3">
                                @if (ViewBag.AvailableChallenges != null && Model.Challenges != null)
                                {
                                    var availableChallenges = ViewBag.AvailableChallenges as List<Challenge>;
                                    var existingChallengeIds = Model.Challenges.Select(c => c.ChallengeId).ToList();
                                    var challengesToAdd = availableChallenges.Where(c => !existingChallengeIds.Contains(c.Id)).ToList();

                                    if (challengesToAdd.Any())
                                    {
                                        <form asp-action="AddChallenge" asp-controller="Competitions" method="post">
                                            <input type="hidden" name="competitionId" value="@Model.Id" />
                                            <div class="input-group">
                                                <select name="challengeId" class="form-select" required>
                                                    <option value="">Select a challenge...</option>
                                                    @foreach (var challenge in challengesToAdd)
                                                    {
                                                        <option value="@challenge.Id">@challenge.Title</option>
                                                    }
                                                </select>
                                                <input type="number" name="points" class="form-control" placeholder="Points" required min="1" />
                                                <button type="submit" class="btn btn-outline-primary">Add Challenge</button>
                                            </div>
                                        </form>
                                    }
                                    else
                                    {
                                        <div class="alert alert-info">
                                            All available challenges have been added to this competition.
                                        </div>
                                    }
                                }
                            </div>

                            <div class="table-responsive">
                                <table class="table">
                                    <thead>
                                        <tr>
                                            <th>Challenge</th>
                                            <th>Points</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (Model.Challenges != null)
                                        {
                                            @foreach (var challenge in Model.Challenges.Where(c => c.Challenge != null))
                                            {
                                                <tr>
                                                    <td>@challenge.Challenge.Title</td>
                                                    <td>@challenge.Points</td>
                                                    <td>
                                                        <form asp-action="RemoveChallenge" asp-controller="Competitions" method="post" style="display: inline;">
                                                            <input type="hidden" name="competitionId" value="@Model.Id" />
                                                            <input type="hidden" name="challengeId" value="@challenge.ChallengeId" />
                                                            <button type="submit" class="btn btn-sm btn-danger">Remove</button>
                                                        </form>
                                                    </td>
                                                </tr>
                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        $(document).ready(function() {
            // Convert UTC dates to local for display
            const startUtc = new Date('@Model.StartDate.ToString("O")');
            const endUtc = new Date('@Model.EndDate.ToString("O")');
            
            // Convert to local
            const startLocal = new Date(startUtc.getTime() - (startUtc.getTimezoneOffset() * 60000));
            const endLocal = new Date(endUtc.getTime() - (endUtc.getTimezoneOffset() * 60000));
            
            // Set local values in the form
            $('#StartDate').val(startLocal.toISOString().slice(0, 16));
            $('#EndDate').val(endLocal.toISOString().slice(0, 16));

            // Set minimum EndDate based on StartDate
            $('#StartDate').change(function() {
                $('#EndDate').attr('min', $(this).val());
                if ($('#EndDate').val() < $(this).val()) {
                    $('#EndDate').val($(this).val());
                }
            });

            // Convert local dates to UTC before submitting
            $('#editCompetitionForm').submit(function(e) {
                e.preventDefault();

                const startDate = new Date($('#StartDate').val());
                const endDate = new Date($('#EndDate').val());

                if (endDate <= startDate) {
                    alert('End date must be after start date');
                    return false;
                }

                // Convert to UTC
                const startUtc = new Date(startDate.getTime() + (startDate.getTimezoneOffset() * 60000));
                const endUtc = new Date(endDate.getTime() + (endDate.getTimezoneOffset() * 60000));

                // Create hidden inputs for UTC values
                $('<input>').attr({
                    type: 'hidden',
                    name: 'StartDate',
                    value: startUtc.toISOString()
                }).appendTo($(this));

                $('<input>').attr({
                    type: 'hidden',
                    name: 'EndDate',
                    value: endUtc.toISOString()
                }).appendTo($(this));

                this.submit();
            });
        });
    </script>
}