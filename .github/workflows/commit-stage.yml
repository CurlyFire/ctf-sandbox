name: Commit stage

on:
  push:
    branches:
      - main
  pull_request:
    branches: 
      - main

permissions:
  checks: write
  contents: read
  packages: write

jobs:
  build-and-test:
    name: CI / Build and Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Pre-build dev container and push to GHCR (if on main branch)
      uses: devcontainers/ci@v0.3
      if: github.event_name == 'push'
      with:
        imageName: ghcr.io/curlyfire/ctf-sandbox-devcontainer
        cacheFrom: ghcr.io/curlyfire/ctf-sandbox-devcontainer
        push: always

    - name: Run commit stage script in dev container
      uses: devcontainers/ci@v0.3

      with:
        cacheFrom: ghcr.io/curlyfire/ctf-sandbox-devcontainer
        runCmd: |
          set -euo pipefail

          # Feed the JSON secret directly to gcloud via stdin
          cat <<'EOF' | gcloud auth activate-service-account \
            --key-file=- \
            --project "${{ secrets.GCP_PROJECT_ID }}"
          ${{ secrets.GCP_SA_KEY }}
          EOF
          
          # Configure Docker auth non-interactively
          gcloud auth configure-docker "${{ secrets.GCP_REGION }}-docker.pkg.dev" --quiet

          VERSION="${{ github.sha }}"
          ADMIN_PASSWORD="${{ secrets.ADMIN_PASSWORD }}"
          IPINFO_TOKEN="${{ secrets.IPINFO_TOKEN }}"
          GITHUB_EVENT_NAME="${{ github.event_name }}"

          psArgs_base=(
            "-Version" "$VERSION"
          )

          psArgs_push=()
          if [ "$GITHUB_EVENT_NAME" == "push" ]; then
            psArgs_push+=(
              "-PushImage"
            )
          fi

          pwsh -Command "./pipelines/stages/commit/invoke.ps1 ${psArgs_base[@]} ${psArgs_push[@]}"

    - name: Publish test results
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: .NET Tests
        path: '**/*.trx'
        reporter: dotnet-trx
